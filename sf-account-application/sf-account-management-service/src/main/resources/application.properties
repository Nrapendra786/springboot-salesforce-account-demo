#server.port= 8082
#spring.application.name=sf-account-management-service
#logging.file.name=logs/sf-account-management-service.log


spring.application.name=account-management-service
server.port=9092

# IMPORTANT: Since we are adding PLAINTEXT://broker:9090 as broker-server URL,
# if you start the consumer service outside the kafka_network, it will not be able to connect to the broker.
# Hence, the service will not start outside the Docker container network.

# kafka configuration
spring.kafka.bootstrap-servers=localhost:9093
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.nrapendra
spring.kafka.consumer.properties.spring.value.default.type=com.nrapendra.Message
logging.level.org.apache.kafka=INFO
logging.level.org.springframework.kafka=INFO
logging.level.com.nrapendra.consumer.service.KafkaConsumerService=INFO

# h2 database configuration
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
spring.datasource.username=sa
spring.datasource.password=sa
spring.datasource.hikari.maximum-pool-size=2
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
hibernate.ddl-auto=create

# swagger-ui
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.api-docs.path=/v3/api-docs
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/META-INF/resources/webjars/
spring.mvc.static-path-pattern=/swagger-ui/**
springdoc.swagger-ui.path=/swagger-ui-custom.html