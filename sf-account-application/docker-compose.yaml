networks:
  container:
    driver: bridge  # Default driver; optional since 'bridge' is the default

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_AUTOPURGE_INTERVAL=1
    networks:
      - container
    logging:
      driver: none
  kafka:
    image: docker.io/bitnami/kafka:latest
    ports:
      - "9093:9093"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ZOOKEEPER_TLS_VERIFY_HOSTNAME=false
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      zookeeper:
        condition: service_started
    networks:
      - container
    logging:
      driver: none
  # create kafka raw topic
  kafka-init:
    image: docker.io/bitnami/kafka:latest
    networks:
      - container
    command: [ "/bin/bash", "-c", "/create_topic.sh" ]
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - TEST_TOPIC_NAME=my_topic
    depends_on:
      kafka:
        condition: service_started
    volumes:
      - type: bind
        source: ./create_topic.sh
        target: /create_topic.sh
    init: true

#  zookeeper:
#    image: wurstmeister/zookeeper:latest
#    networks:
#      - kafka-network
#  kafka:
#    image: wurstmeister/kafka:latest
#    ports:
#      - "9092:9092"
#      - "29092:9092"
#    depends_on:
#      - zookeeper
#    networks:
#      - kafka-network
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: kafka
#      KAFKA_ADVERTISED_PORT: 9092
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_CREATE_TOPICS: "salesforce_topic:1:1"
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
#      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9092
# volumes:
#   log_volume:
#     driver: local

#  account-service:
#    build: ../sf-account-application/sf-account-service  # Ensure this is the correct relative path
#    ports:
#      - "8081:8080"
#    environment:
#      - USERNAME=${USER_NAME:-default_user}  # Set defaults if variables aren't passed
#      - PASSWORD=${PASSWORD:-default_pass}
#      - CLIENT_ID=${CLIENT_ID}
#      - CLIENT_SECRET=${CLIENT_SECRET}
#      - SECURITY_TOKEN=${SECURITY_TOKEN}
#      - TOKEN_URL=${TOKEN_URL}
#      - LOGGING_FILE_NAME=/logs/salesforce-account-management.log
#    volumes:
#      - log_volume:/logs
#  pub-sub-java-client:
#    build: ../sf-account-application/sf-pub-sub-java-client
#    depends_on:
#      - kafka
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#    ports:
#      - "8082:8080"
#  sf-account-management-service:
#    build: ../sf-account-application/sf-account-management-service
#    depends_on:
#      - kafka
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#    ports:
#      - "8083:8080"



























#version: '3'
#volumes:
#  log_volume:
#    driver: local
#services:
#  app:
#    build: ../sf-account-application/sf-account-service
#    ports:
#      - "8080:8080"
#    environment:
#      - USERNAME=${USER_NAME}
#      - PASSWORD=${PASSWORD}
#      - CLIENT_ID=${CLIENT_ID}
#      - CLIENT_SECRET=${CLIENT_SECRET}
#      - SECURITY_TOKEN=${SECURITY_TOKEN}
#      - TOKEN_URL=${TOKEN_URL}
#      - LOGGING_FILE_NAME=/logs/salesforce-account-management.log
#    volumes:
#      - log_volume:/logs
#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - 22181:2181
#
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    depends_on:
#      - zookeeper
#    ports:
#      - 29092:29092
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#
#  kafka-ui:
#    image: provectuslabs/kafka-ui:latest
#    depends_on:
#      - kafka
#    ports:
#      - 8090:8080
#    environment:
#      KAFKA_CLUSTERS_0_NAME: local
#      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
#      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181