name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule: 
    - cron: '21 16 * * *'

jobs:
  build-and-test:
    name: Build and Test Microservices
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - commons
          - sf-account-service
          - sf-pub-sub-java-client
          - sf-account-management-service

    env:
      JAVA_VERSION: '17'
      DISTRIBUTION: 'temurin'
      USER: ${{ secrets.USER }}
      PASSWORD: ${{ secrets.PASSWORD }}
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      SECURITY_TOKEN: ${{ secrets.SECURITY_TOKEN }}
      TOKEN_URL: ${{ secrets.TOKEN_URL }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_PROJECTKEY: ${{ secrets.SONAR_PROJECTKEY }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.DISTRIBUTION }}

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.sonar/cache
          key: |
            ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            ${{ runner.os }}-sonar-${{ hashFiles('**/pom.xml') }}

      - name: Build and Test Project
        run: mvn clean install -f ./sf-account-application/pom.xml -DskipTests

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk Test
        run: cd sf-account-application && snyk test

      - name: Monitor with Snyk
        run: cd sf-account-application && snyk monitor

      - name: Build, Analyze and Test ${{ matrix.service }}
        env:
          TESTCONTAINERS_HOST_OVERRIDE: localhost
        working-directory: ./sf-account-application/${{ matrix.service }}
        run: mvn clean -B verify sonar:sonar -Dsonar.coverage.exclusions=**/* -Dsonar.projectKey=$SONAR_PROJECTKEY

  docker-publish:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test
    strategy:
      matrix:
        service:
          - commons
          - sf-account-service
          - sf-pub-sub-java-client
          - sf-account-management-service

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image for ${{ matrix.service }}
        working-directory: ./sf-account-application/${{ matrix.service }}
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:${{ github.sha }} .

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:${{ github.sha }}

      - name: Log out of Docker Hub
        run: docker logout
