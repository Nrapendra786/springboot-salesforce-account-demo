# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test Microservices
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: 
          - commons
          - sf-account-service
          - sf-pub-sub-java-client
          - sf-account-management-service  # List of microservices

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'  # Or use 'zulu', 'adopt', etc.
          java-package: jdk
          check-latest: false

      - name: List directory contents
        run: ls -la ./sf-account-application

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
 
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
        
      - name: Build the project
        run: mvn clean install -f ./sf-account-application/pom.xml -DskipTests

      - name: Build, Analyze and Test ${{ matrix.service }}
        env:
          USER: ${{ secrets.USER }}
          PASSWORD: ${{ secrets.PASSWORD }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          SECURITY_TOKEN: ${{ secrets.SECURITY_TOKEN }}
          TOKEN_URL: ${{ secrets.TOKEN_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        working-directory: ./sf-account-application/${{ matrix.service }}
        run:  mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Nrapendra786_springboot-salesforce-account-demo
          

        


